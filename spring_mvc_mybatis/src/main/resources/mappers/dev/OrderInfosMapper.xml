<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fj.dao.OrderInfosMapper">
  <resultMap id="BaseResultMap" type="com.fj.domain.OrderInfos">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="model_code" jdbcType="VARCHAR" property="modelCode" />
    <result column="reserve_model" jdbcType="VARCHAR" property="reserveModel" />
    <result column="rent" jdbcType="DECIMAL" property="rent" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="actual_amount" jdbcType="DECIMAL" property="actualAmount" />
    <result column="illegal_freeze_amount" jdbcType="DECIMAL" property="illegalFreezeAmount" />
    <result column="other_freeze_amount" jdbcType="DECIMAL" property="otherFreezeAmount" />
    <result column="additional_amount" jdbcType="DECIMAL" property="additionalAmount" />
    <result column="return_rent" jdbcType="INTEGER" property="returnRent" />
    <result column="margin" jdbcType="DECIMAL" property="margin" />
    <result column="return_margin" jdbcType="INTEGER" property="returnMargin" />
    <result column="return_margin_time" jdbcType="TIMESTAMP" property="returnMarginTime" />
    <result column="drive_shop_code" jdbcType="VARCHAR" property="driveShopCode" />
    <result column="drive_shop_name" jdbcType="VARCHAR" property="driveShopName" />
    <result column="pick_address" jdbcType="VARCHAR" property="pickAddress" />
    <result column="return_shop_code" jdbcType="VARCHAR" property="returnShopCode" />
    <result column="return_shop_name" jdbcType="VARCHAR" property="returnShopName" />
    <result column="return_address" jdbcType="VARCHAR" property="returnAddress" />
    <result column="license_plate" jdbcType="VARCHAR" property="licensePlate" />
    <result column="park_place" jdbcType="VARCHAR" property="parkPlace" />
    <result column="key_drawer_code" jdbcType="VARCHAR" property="keyDrawerCode" />
    <result column="key_cabinet_code" jdbcType="VARCHAR" property="keyCabinetCode" />
    <result column="pick_day" jdbcType="TIMESTAMP" property="pickDay" />
    <result column="pick_time" jdbcType="VARCHAR" property="pickTime" />
    <result column="real_pick_time" jdbcType="TIMESTAMP" property="realPickTime" />
    <result column="return_time" jdbcType="TIMESTAMP" property="returnTime" />
    <result column="real_return_time" jdbcType="TIMESTAMP" property="realReturnTime" />
    <result column="order_from" jdbcType="INTEGER" property="orderFrom" />
    <result column="cancel_reason" jdbcType="VARCHAR" property="cancelReason" />
    <result column="date_create" jdbcType="TIMESTAMP" property="dateCreate" />
    <result column="date_update" jdbcType="TIMESTAMP" property="dateUpdate" />
    <result column="date_delete" jdbcType="TIMESTAMP" property="dateDelete" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="order_request_no" jdbcType="VARCHAR" property="orderRequestNo" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="begin_auth_time" jdbcType="TIMESTAMP" property="beginAuthTime" />
    <result column="cancel_time" jdbcType="TIMESTAMP" property="cancelTime" />
    <result column="pay_valid_time" jdbcType="TIMESTAMP" property="payValidTime" />
    <result column="other_freeze_amount_status" jdbcType="VARCHAR" property="otherFreezeAmountStatus" />
    <result column="illegal_freeze_amount_status" jdbcType="VARCHAR" property="illegalFreezeAmountStatus" />
    <result column="additional_amount_status" jdbcType="VARCHAR" property="additionalAmountStatus" />
    <result column="return_car_inspection_staff" jdbcType="VARCHAR" property="returnCarInspectionStaff" />
    <result column="pick_car_inspection_staff" jdbcType="VARCHAR" property="pickCarInspectionStaff" />
    <result column="is_willing_buy_car" jdbcType="VARCHAR" property="isWillingBuyCar" />
    <result column="return_car_oil_mass_cell" jdbcType="INTEGER" property="returnCarOilMassCell" />
    <result column="pick_car_oil_mass_cell" jdbcType="INTEGER" property="pickCarOilMassCell" />
    <result column="is_face_recognition" jdbcType="VARCHAR" property="isFaceRecognition" />
    <result column="return_park_place" jdbcType="VARCHAR" property="returnParkPlace" />
    <result column="actual_margin" jdbcType="DECIMAL" property="actualMargin" />
    <result column="actual_rent" jdbcType="DECIMAL" property="actualRent" />
    <result column="zhima_score" jdbcType="INTEGER" property="zhimaScore" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, status, order_number, username, phone, model_code, reserve_model, rent, total_amount, 
    actual_amount, illegal_freeze_amount, other_freeze_amount, additional_amount, return_rent, 
    margin, return_margin, return_margin_time, drive_shop_code, drive_shop_name, pick_address, 
    return_shop_code, return_shop_name, return_address, license_plate, park_place, key_drawer_code, 
    key_cabinet_code, pick_day, pick_time, real_pick_time, return_time, real_return_time, 
    order_from, cancel_reason, date_create, date_update, date_delete, creator, modifier, 
    order_request_no, user_id, begin_auth_time, cancel_time, pay_valid_time, other_freeze_amount_status, 
    illegal_freeze_amount_status, additional_amount_status, return_car_inspection_staff, 
    pick_car_inspection_staff, is_willing_buy_car, return_car_oil_mass_cell, pick_car_oil_mass_cell, 
    is_face_recognition, return_park_place, actual_margin, actual_rent, zhima_score
  </sql>
  <select id="selectByExample" parameterType="com.fj.domain.OrderInfosExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_infos
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_infos
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_infos
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fj.domain.OrderInfosExample">
    delete from order_infos
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fj.domain.OrderInfos">
    insert into order_infos (id, status, order_number, 
      username, phone, model_code, 
      reserve_model, rent, total_amount, 
      actual_amount, illegal_freeze_amount, other_freeze_amount, 
      additional_amount, return_rent, margin, 
      return_margin, return_margin_time, drive_shop_code, 
      drive_shop_name, pick_address, return_shop_code, 
      return_shop_name, return_address, license_plate, 
      park_place, key_drawer_code, key_cabinet_code, 
      pick_day, pick_time, real_pick_time, 
      return_time, real_return_time, order_from, 
      cancel_reason, date_create, date_update, 
      date_delete, creator, modifier, 
      order_request_no, user_id, begin_auth_time, 
      cancel_time, pay_valid_time, other_freeze_amount_status, 
      illegal_freeze_amount_status, additional_amount_status, 
      return_car_inspection_staff, pick_car_inspection_staff, 
      is_willing_buy_car, return_car_oil_mass_cell, 
      pick_car_oil_mass_cell, is_face_recognition, 
      return_park_place, actual_margin, actual_rent, 
      zhima_score)
    values (#{id,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{modelCode,jdbcType=VARCHAR}, 
      #{reserveModel,jdbcType=VARCHAR}, #{rent,jdbcType=DECIMAL}, #{totalAmount,jdbcType=DECIMAL}, 
      #{actualAmount,jdbcType=DECIMAL}, #{illegalFreezeAmount,jdbcType=DECIMAL}, #{otherFreezeAmount,jdbcType=DECIMAL}, 
      #{additionalAmount,jdbcType=DECIMAL}, #{returnRent,jdbcType=INTEGER}, #{margin,jdbcType=DECIMAL}, 
      #{returnMargin,jdbcType=INTEGER}, #{returnMarginTime,jdbcType=TIMESTAMP}, #{driveShopCode,jdbcType=VARCHAR}, 
      #{driveShopName,jdbcType=VARCHAR}, #{pickAddress,jdbcType=VARCHAR}, #{returnShopCode,jdbcType=VARCHAR}, 
      #{returnShopName,jdbcType=VARCHAR}, #{returnAddress,jdbcType=VARCHAR}, #{licensePlate,jdbcType=VARCHAR}, 
      #{parkPlace,jdbcType=VARCHAR}, #{keyDrawerCode,jdbcType=VARCHAR}, #{keyCabinetCode,jdbcType=VARCHAR}, 
      #{pickDay,jdbcType=TIMESTAMP}, #{pickTime,jdbcType=VARCHAR}, #{realPickTime,jdbcType=TIMESTAMP}, 
      #{returnTime,jdbcType=TIMESTAMP}, #{realReturnTime,jdbcType=TIMESTAMP}, #{orderFrom,jdbcType=INTEGER}, 
      #{cancelReason,jdbcType=VARCHAR}, #{dateCreate,jdbcType=TIMESTAMP}, #{dateUpdate,jdbcType=TIMESTAMP}, 
      #{dateDelete,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, #{modifier,jdbcType=VARCHAR}, 
      #{orderRequestNo,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{beginAuthTime,jdbcType=TIMESTAMP}, 
      #{cancelTime,jdbcType=TIMESTAMP}, #{payValidTime,jdbcType=TIMESTAMP}, #{otherFreezeAmountStatus,jdbcType=VARCHAR}, 
      #{illegalFreezeAmountStatus,jdbcType=VARCHAR}, #{additionalAmountStatus,jdbcType=VARCHAR}, 
      #{returnCarInspectionStaff,jdbcType=VARCHAR}, #{pickCarInspectionStaff,jdbcType=VARCHAR}, 
      #{isWillingBuyCar,jdbcType=VARCHAR}, #{returnCarOilMassCell,jdbcType=INTEGER}, 
      #{pickCarOilMassCell,jdbcType=INTEGER}, #{isFaceRecognition,jdbcType=VARCHAR}, 
      #{returnParkPlace,jdbcType=VARCHAR}, #{actualMargin,jdbcType=DECIMAL}, #{actualRent,jdbcType=DECIMAL}, 
      #{zhimaScore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fj.domain.OrderInfos">
    insert into order_infos
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="modelCode != null">
        model_code,
      </if>
      <if test="reserveModel != null">
        reserve_model,
      </if>
      <if test="rent != null">
        rent,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="actualAmount != null">
        actual_amount,
      </if>
      <if test="illegalFreezeAmount != null">
        illegal_freeze_amount,
      </if>
      <if test="otherFreezeAmount != null">
        other_freeze_amount,
      </if>
      <if test="additionalAmount != null">
        additional_amount,
      </if>
      <if test="returnRent != null">
        return_rent,
      </if>
      <if test="margin != null">
        margin,
      </if>
      <if test="returnMargin != null">
        return_margin,
      </if>
      <if test="returnMarginTime != null">
        return_margin_time,
      </if>
      <if test="driveShopCode != null">
        drive_shop_code,
      </if>
      <if test="driveShopName != null">
        drive_shop_name,
      </if>
      <if test="pickAddress != null">
        pick_address,
      </if>
      <if test="returnShopCode != null">
        return_shop_code,
      </if>
      <if test="returnShopName != null">
        return_shop_name,
      </if>
      <if test="returnAddress != null">
        return_address,
      </if>
      <if test="licensePlate != null">
        license_plate,
      </if>
      <if test="parkPlace != null">
        park_place,
      </if>
      <if test="keyDrawerCode != null">
        key_drawer_code,
      </if>
      <if test="keyCabinetCode != null">
        key_cabinet_code,
      </if>
      <if test="pickDay != null">
        pick_day,
      </if>
      <if test="pickTime != null">
        pick_time,
      </if>
      <if test="realPickTime != null">
        real_pick_time,
      </if>
      <if test="returnTime != null">
        return_time,
      </if>
      <if test="realReturnTime != null">
        real_return_time,
      </if>
      <if test="orderFrom != null">
        order_from,
      </if>
      <if test="cancelReason != null">
        cancel_reason,
      </if>
      <if test="dateCreate != null">
        date_create,
      </if>
      <if test="dateUpdate != null">
        date_update,
      </if>
      <if test="dateDelete != null">
        date_delete,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="orderRequestNo != null">
        order_request_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="beginAuthTime != null">
        begin_auth_time,
      </if>
      <if test="cancelTime != null">
        cancel_time,
      </if>
      <if test="payValidTime != null">
        pay_valid_time,
      </if>
      <if test="otherFreezeAmountStatus != null">
        other_freeze_amount_status,
      </if>
      <if test="illegalFreezeAmountStatus != null">
        illegal_freeze_amount_status,
      </if>
      <if test="additionalAmountStatus != null">
        additional_amount_status,
      </if>
      <if test="returnCarInspectionStaff != null">
        return_car_inspection_staff,
      </if>
      <if test="pickCarInspectionStaff != null">
        pick_car_inspection_staff,
      </if>
      <if test="isWillingBuyCar != null">
        is_willing_buy_car,
      </if>
      <if test="returnCarOilMassCell != null">
        return_car_oil_mass_cell,
      </if>
      <if test="pickCarOilMassCell != null">
        pick_car_oil_mass_cell,
      </if>
      <if test="isFaceRecognition != null">
        is_face_recognition,
      </if>
      <if test="returnParkPlace != null">
        return_park_place,
      </if>
      <if test="actualMargin != null">
        actual_margin,
      </if>
      <if test="actualRent != null">
        actual_rent,
      </if>
      <if test="zhimaScore != null">
        zhima_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="modelCode != null">
        #{modelCode,jdbcType=VARCHAR},
      </if>
      <if test="reserveModel != null">
        #{reserveModel,jdbcType=VARCHAR},
      </if>
      <if test="rent != null">
        #{rent,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="illegalFreezeAmount != null">
        #{illegalFreezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="otherFreezeAmount != null">
        #{otherFreezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="additionalAmount != null">
        #{additionalAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnRent != null">
        #{returnRent,jdbcType=INTEGER},
      </if>
      <if test="margin != null">
        #{margin,jdbcType=DECIMAL},
      </if>
      <if test="returnMargin != null">
        #{returnMargin,jdbcType=INTEGER},
      </if>
      <if test="returnMarginTime != null">
        #{returnMarginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="driveShopCode != null">
        #{driveShopCode,jdbcType=VARCHAR},
      </if>
      <if test="driveShopName != null">
        #{driveShopName,jdbcType=VARCHAR},
      </if>
      <if test="pickAddress != null">
        #{pickAddress,jdbcType=VARCHAR},
      </if>
      <if test="returnShopCode != null">
        #{returnShopCode,jdbcType=VARCHAR},
      </if>
      <if test="returnShopName != null">
        #{returnShopName,jdbcType=VARCHAR},
      </if>
      <if test="returnAddress != null">
        #{returnAddress,jdbcType=VARCHAR},
      </if>
      <if test="licensePlate != null">
        #{licensePlate,jdbcType=VARCHAR},
      </if>
      <if test="parkPlace != null">
        #{parkPlace,jdbcType=VARCHAR},
      </if>
      <if test="keyDrawerCode != null">
        #{keyDrawerCode,jdbcType=VARCHAR},
      </if>
      <if test="keyCabinetCode != null">
        #{keyCabinetCode,jdbcType=VARCHAR},
      </if>
      <if test="pickDay != null">
        #{pickDay,jdbcType=TIMESTAMP},
      </if>
      <if test="pickTime != null">
        #{pickTime,jdbcType=VARCHAR},
      </if>
      <if test="realPickTime != null">
        #{realPickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null">
        #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realReturnTime != null">
        #{realReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderFrom != null">
        #{orderFrom,jdbcType=INTEGER},
      </if>
      <if test="cancelReason != null">
        #{cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="dateCreate != null">
        #{dateCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="dateUpdate != null">
        #{dateUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="dateDelete != null">
        #{dateDelete,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="orderRequestNo != null">
        #{orderRequestNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="beginAuthTime != null">
        #{beginAuthTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null">
        #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payValidTime != null">
        #{payValidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="otherFreezeAmountStatus != null">
        #{otherFreezeAmountStatus,jdbcType=VARCHAR},
      </if>
      <if test="illegalFreezeAmountStatus != null">
        #{illegalFreezeAmountStatus,jdbcType=VARCHAR},
      </if>
      <if test="additionalAmountStatus != null">
        #{additionalAmountStatus,jdbcType=VARCHAR},
      </if>
      <if test="returnCarInspectionStaff != null">
        #{returnCarInspectionStaff,jdbcType=VARCHAR},
      </if>
      <if test="pickCarInspectionStaff != null">
        #{pickCarInspectionStaff,jdbcType=VARCHAR},
      </if>
      <if test="isWillingBuyCar != null">
        #{isWillingBuyCar,jdbcType=VARCHAR},
      </if>
      <if test="returnCarOilMassCell != null">
        #{returnCarOilMassCell,jdbcType=INTEGER},
      </if>
      <if test="pickCarOilMassCell != null">
        #{pickCarOilMassCell,jdbcType=INTEGER},
      </if>
      <if test="isFaceRecognition != null">
        #{isFaceRecognition,jdbcType=VARCHAR},
      </if>
      <if test="returnParkPlace != null">
        #{returnParkPlace,jdbcType=VARCHAR},
      </if>
      <if test="actualMargin != null">
        #{actualMargin,jdbcType=DECIMAL},
      </if>
      <if test="actualRent != null">
        #{actualRent,jdbcType=DECIMAL},
      </if>
      <if test="zhimaScore != null">
        #{zhimaScore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fj.domain.OrderInfosExample" resultType="java.lang.Long">
    select count(*) from order_infos
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_infos
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.orderNumber != null">
        order_number = #{record.orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.modelCode != null">
        model_code = #{record.modelCode,jdbcType=VARCHAR},
      </if>
      <if test="record.reserveModel != null">
        reserve_model = #{record.reserveModel,jdbcType=VARCHAR},
      </if>
      <if test="record.rent != null">
        rent = #{record.rent,jdbcType=DECIMAL},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.actualAmount != null">
        actual_amount = #{record.actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.illegalFreezeAmount != null">
        illegal_freeze_amount = #{record.illegalFreezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.otherFreezeAmount != null">
        other_freeze_amount = #{record.otherFreezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.additionalAmount != null">
        additional_amount = #{record.additionalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.returnRent != null">
        return_rent = #{record.returnRent,jdbcType=INTEGER},
      </if>
      <if test="record.margin != null">
        margin = #{record.margin,jdbcType=DECIMAL},
      </if>
      <if test="record.returnMargin != null">
        return_margin = #{record.returnMargin,jdbcType=INTEGER},
      </if>
      <if test="record.returnMarginTime != null">
        return_margin_time = #{record.returnMarginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.driveShopCode != null">
        drive_shop_code = #{record.driveShopCode,jdbcType=VARCHAR},
      </if>
      <if test="record.driveShopName != null">
        drive_shop_name = #{record.driveShopName,jdbcType=VARCHAR},
      </if>
      <if test="record.pickAddress != null">
        pick_address = #{record.pickAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.returnShopCode != null">
        return_shop_code = #{record.returnShopCode,jdbcType=VARCHAR},
      </if>
      <if test="record.returnShopName != null">
        return_shop_name = #{record.returnShopName,jdbcType=VARCHAR},
      </if>
      <if test="record.returnAddress != null">
        return_address = #{record.returnAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.licensePlate != null">
        license_plate = #{record.licensePlate,jdbcType=VARCHAR},
      </if>
      <if test="record.parkPlace != null">
        park_place = #{record.parkPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.keyDrawerCode != null">
        key_drawer_code = #{record.keyDrawerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.keyCabinetCode != null">
        key_cabinet_code = #{record.keyCabinetCode,jdbcType=VARCHAR},
      </if>
      <if test="record.pickDay != null">
        pick_day = #{record.pickDay,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pickTime != null">
        pick_time = #{record.pickTime,jdbcType=VARCHAR},
      </if>
      <if test="record.realPickTime != null">
        real_pick_time = #{record.realPickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.returnTime != null">
        return_time = #{record.returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.realReturnTime != null">
        real_return_time = #{record.realReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderFrom != null">
        order_from = #{record.orderFrom,jdbcType=INTEGER},
      </if>
      <if test="record.cancelReason != null">
        cancel_reason = #{record.cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="record.dateCreate != null">
        date_create = #{record.dateCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dateUpdate != null">
        date_update = #{record.dateUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dateDelete != null">
        date_delete = #{record.dateDelete,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.modifier != null">
        modifier = #{record.modifier,jdbcType=VARCHAR},
      </if>
      <if test="record.orderRequestNo != null">
        order_request_no = #{record.orderRequestNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.beginAuthTime != null">
        begin_auth_time = #{record.beginAuthTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cancelTime != null">
        cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payValidTime != null">
        pay_valid_time = #{record.payValidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.otherFreezeAmountStatus != null">
        other_freeze_amount_status = #{record.otherFreezeAmountStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.illegalFreezeAmountStatus != null">
        illegal_freeze_amount_status = #{record.illegalFreezeAmountStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.additionalAmountStatus != null">
        additional_amount_status = #{record.additionalAmountStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.returnCarInspectionStaff != null">
        return_car_inspection_staff = #{record.returnCarInspectionStaff,jdbcType=VARCHAR},
      </if>
      <if test="record.pickCarInspectionStaff != null">
        pick_car_inspection_staff = #{record.pickCarInspectionStaff,jdbcType=VARCHAR},
      </if>
      <if test="record.isWillingBuyCar != null">
        is_willing_buy_car = #{record.isWillingBuyCar,jdbcType=VARCHAR},
      </if>
      <if test="record.returnCarOilMassCell != null">
        return_car_oil_mass_cell = #{record.returnCarOilMassCell,jdbcType=INTEGER},
      </if>
      <if test="record.pickCarOilMassCell != null">
        pick_car_oil_mass_cell = #{record.pickCarOilMassCell,jdbcType=INTEGER},
      </if>
      <if test="record.isFaceRecognition != null">
        is_face_recognition = #{record.isFaceRecognition,jdbcType=VARCHAR},
      </if>
      <if test="record.returnParkPlace != null">
        return_park_place = #{record.returnParkPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.actualMargin != null">
        actual_margin = #{record.actualMargin,jdbcType=DECIMAL},
      </if>
      <if test="record.actualRent != null">
        actual_rent = #{record.actualRent,jdbcType=DECIMAL},
      </if>
      <if test="record.zhimaScore != null">
        zhima_score = #{record.zhimaScore,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_infos
    set id = #{record.id,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      order_number = #{record.orderNumber,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      model_code = #{record.modelCode,jdbcType=VARCHAR},
      reserve_model = #{record.reserveModel,jdbcType=VARCHAR},
      rent = #{record.rent,jdbcType=DECIMAL},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      actual_amount = #{record.actualAmount,jdbcType=DECIMAL},
      illegal_freeze_amount = #{record.illegalFreezeAmount,jdbcType=DECIMAL},
      other_freeze_amount = #{record.otherFreezeAmount,jdbcType=DECIMAL},
      additional_amount = #{record.additionalAmount,jdbcType=DECIMAL},
      return_rent = #{record.returnRent,jdbcType=INTEGER},
      margin = #{record.margin,jdbcType=DECIMAL},
      return_margin = #{record.returnMargin,jdbcType=INTEGER},
      return_margin_time = #{record.returnMarginTime,jdbcType=TIMESTAMP},
      drive_shop_code = #{record.driveShopCode,jdbcType=VARCHAR},
      drive_shop_name = #{record.driveShopName,jdbcType=VARCHAR},
      pick_address = #{record.pickAddress,jdbcType=VARCHAR},
      return_shop_code = #{record.returnShopCode,jdbcType=VARCHAR},
      return_shop_name = #{record.returnShopName,jdbcType=VARCHAR},
      return_address = #{record.returnAddress,jdbcType=VARCHAR},
      license_plate = #{record.licensePlate,jdbcType=VARCHAR},
      park_place = #{record.parkPlace,jdbcType=VARCHAR},
      key_drawer_code = #{record.keyDrawerCode,jdbcType=VARCHAR},
      key_cabinet_code = #{record.keyCabinetCode,jdbcType=VARCHAR},
      pick_day = #{record.pickDay,jdbcType=TIMESTAMP},
      pick_time = #{record.pickTime,jdbcType=VARCHAR},
      real_pick_time = #{record.realPickTime,jdbcType=TIMESTAMP},
      return_time = #{record.returnTime,jdbcType=TIMESTAMP},
      real_return_time = #{record.realReturnTime,jdbcType=TIMESTAMP},
      order_from = #{record.orderFrom,jdbcType=INTEGER},
      cancel_reason = #{record.cancelReason,jdbcType=VARCHAR},
      date_create = #{record.dateCreate,jdbcType=TIMESTAMP},
      date_update = #{record.dateUpdate,jdbcType=TIMESTAMP},
      date_delete = #{record.dateDelete,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR},
      modifier = #{record.modifier,jdbcType=VARCHAR},
      order_request_no = #{record.orderRequestNo,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      begin_auth_time = #{record.beginAuthTime,jdbcType=TIMESTAMP},
      cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
      pay_valid_time = #{record.payValidTime,jdbcType=TIMESTAMP},
      other_freeze_amount_status = #{record.otherFreezeAmountStatus,jdbcType=VARCHAR},
      illegal_freeze_amount_status = #{record.illegalFreezeAmountStatus,jdbcType=VARCHAR},
      additional_amount_status = #{record.additionalAmountStatus,jdbcType=VARCHAR},
      return_car_inspection_staff = #{record.returnCarInspectionStaff,jdbcType=VARCHAR},
      pick_car_inspection_staff = #{record.pickCarInspectionStaff,jdbcType=VARCHAR},
      is_willing_buy_car = #{record.isWillingBuyCar,jdbcType=VARCHAR},
      return_car_oil_mass_cell = #{record.returnCarOilMassCell,jdbcType=INTEGER},
      pick_car_oil_mass_cell = #{record.pickCarOilMassCell,jdbcType=INTEGER},
      is_face_recognition = #{record.isFaceRecognition,jdbcType=VARCHAR},
      return_park_place = #{record.returnParkPlace,jdbcType=VARCHAR},
      actual_margin = #{record.actualMargin,jdbcType=DECIMAL},
      actual_rent = #{record.actualRent,jdbcType=DECIMAL},
      zhima_score = #{record.zhimaScore,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fj.domain.OrderInfos">
    update order_infos
    <set>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="modelCode != null">
        model_code = #{modelCode,jdbcType=VARCHAR},
      </if>
      <if test="reserveModel != null">
        reserve_model = #{reserveModel,jdbcType=VARCHAR},
      </if>
      <if test="rent != null">
        rent = #{rent,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="actualAmount != null">
        actual_amount = #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="illegalFreezeAmount != null">
        illegal_freeze_amount = #{illegalFreezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="otherFreezeAmount != null">
        other_freeze_amount = #{otherFreezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="additionalAmount != null">
        additional_amount = #{additionalAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnRent != null">
        return_rent = #{returnRent,jdbcType=INTEGER},
      </if>
      <if test="margin != null">
        margin = #{margin,jdbcType=DECIMAL},
      </if>
      <if test="returnMargin != null">
        return_margin = #{returnMargin,jdbcType=INTEGER},
      </if>
      <if test="returnMarginTime != null">
        return_margin_time = #{returnMarginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="driveShopCode != null">
        drive_shop_code = #{driveShopCode,jdbcType=VARCHAR},
      </if>
      <if test="driveShopName != null">
        drive_shop_name = #{driveShopName,jdbcType=VARCHAR},
      </if>
      <if test="pickAddress != null">
        pick_address = #{pickAddress,jdbcType=VARCHAR},
      </if>
      <if test="returnShopCode != null">
        return_shop_code = #{returnShopCode,jdbcType=VARCHAR},
      </if>
      <if test="returnShopName != null">
        return_shop_name = #{returnShopName,jdbcType=VARCHAR},
      </if>
      <if test="returnAddress != null">
        return_address = #{returnAddress,jdbcType=VARCHAR},
      </if>
      <if test="licensePlate != null">
        license_plate = #{licensePlate,jdbcType=VARCHAR},
      </if>
      <if test="parkPlace != null">
        park_place = #{parkPlace,jdbcType=VARCHAR},
      </if>
      <if test="keyDrawerCode != null">
        key_drawer_code = #{keyDrawerCode,jdbcType=VARCHAR},
      </if>
      <if test="keyCabinetCode != null">
        key_cabinet_code = #{keyCabinetCode,jdbcType=VARCHAR},
      </if>
      <if test="pickDay != null">
        pick_day = #{pickDay,jdbcType=TIMESTAMP},
      </if>
      <if test="pickTime != null">
        pick_time = #{pickTime,jdbcType=VARCHAR},
      </if>
      <if test="realPickTime != null">
        real_pick_time = #{realPickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null">
        return_time = #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realReturnTime != null">
        real_return_time = #{realReturnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderFrom != null">
        order_from = #{orderFrom,jdbcType=INTEGER},
      </if>
      <if test="cancelReason != null">
        cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="dateCreate != null">
        date_create = #{dateCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="dateUpdate != null">
        date_update = #{dateUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="dateDelete != null">
        date_delete = #{dateDelete,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="orderRequestNo != null">
        order_request_no = #{orderRequestNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="beginAuthTime != null">
        begin_auth_time = #{beginAuthTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null">
        cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payValidTime != null">
        pay_valid_time = #{payValidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="otherFreezeAmountStatus != null">
        other_freeze_amount_status = #{otherFreezeAmountStatus,jdbcType=VARCHAR},
      </if>
      <if test="illegalFreezeAmountStatus != null">
        illegal_freeze_amount_status = #{illegalFreezeAmountStatus,jdbcType=VARCHAR},
      </if>
      <if test="additionalAmountStatus != null">
        additional_amount_status = #{additionalAmountStatus,jdbcType=VARCHAR},
      </if>
      <if test="returnCarInspectionStaff != null">
        return_car_inspection_staff = #{returnCarInspectionStaff,jdbcType=VARCHAR},
      </if>
      <if test="pickCarInspectionStaff != null">
        pick_car_inspection_staff = #{pickCarInspectionStaff,jdbcType=VARCHAR},
      </if>
      <if test="isWillingBuyCar != null">
        is_willing_buy_car = #{isWillingBuyCar,jdbcType=VARCHAR},
      </if>
      <if test="returnCarOilMassCell != null">
        return_car_oil_mass_cell = #{returnCarOilMassCell,jdbcType=INTEGER},
      </if>
      <if test="pickCarOilMassCell != null">
        pick_car_oil_mass_cell = #{pickCarOilMassCell,jdbcType=INTEGER},
      </if>
      <if test="isFaceRecognition != null">
        is_face_recognition = #{isFaceRecognition,jdbcType=VARCHAR},
      </if>
      <if test="returnParkPlace != null">
        return_park_place = #{returnParkPlace,jdbcType=VARCHAR},
      </if>
      <if test="actualMargin != null">
        actual_margin = #{actualMargin,jdbcType=DECIMAL},
      </if>
      <if test="actualRent != null">
        actual_rent = #{actualRent,jdbcType=DECIMAL},
      </if>
      <if test="zhimaScore != null">
        zhima_score = #{zhimaScore,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fj.domain.OrderInfos">
    update order_infos
    set status = #{status,jdbcType=INTEGER},
      order_number = #{orderNumber,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      model_code = #{modelCode,jdbcType=VARCHAR},
      reserve_model = #{reserveModel,jdbcType=VARCHAR},
      rent = #{rent,jdbcType=DECIMAL},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      actual_amount = #{actualAmount,jdbcType=DECIMAL},
      illegal_freeze_amount = #{illegalFreezeAmount,jdbcType=DECIMAL},
      other_freeze_amount = #{otherFreezeAmount,jdbcType=DECIMAL},
      additional_amount = #{additionalAmount,jdbcType=DECIMAL},
      return_rent = #{returnRent,jdbcType=INTEGER},
      margin = #{margin,jdbcType=DECIMAL},
      return_margin = #{returnMargin,jdbcType=INTEGER},
      return_margin_time = #{returnMarginTime,jdbcType=TIMESTAMP},
      drive_shop_code = #{driveShopCode,jdbcType=VARCHAR},
      drive_shop_name = #{driveShopName,jdbcType=VARCHAR},
      pick_address = #{pickAddress,jdbcType=VARCHAR},
      return_shop_code = #{returnShopCode,jdbcType=VARCHAR},
      return_shop_name = #{returnShopName,jdbcType=VARCHAR},
      return_address = #{returnAddress,jdbcType=VARCHAR},
      license_plate = #{licensePlate,jdbcType=VARCHAR},
      park_place = #{parkPlace,jdbcType=VARCHAR},
      key_drawer_code = #{keyDrawerCode,jdbcType=VARCHAR},
      key_cabinet_code = #{keyCabinetCode,jdbcType=VARCHAR},
      pick_day = #{pickDay,jdbcType=TIMESTAMP},
      pick_time = #{pickTime,jdbcType=VARCHAR},
      real_pick_time = #{realPickTime,jdbcType=TIMESTAMP},
      return_time = #{returnTime,jdbcType=TIMESTAMP},
      real_return_time = #{realReturnTime,jdbcType=TIMESTAMP},
      order_from = #{orderFrom,jdbcType=INTEGER},
      cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      date_create = #{dateCreate,jdbcType=TIMESTAMP},
      date_update = #{dateUpdate,jdbcType=TIMESTAMP},
      date_delete = #{dateDelete,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR},
      order_request_no = #{orderRequestNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      begin_auth_time = #{beginAuthTime,jdbcType=TIMESTAMP},
      cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      pay_valid_time = #{payValidTime,jdbcType=TIMESTAMP},
      other_freeze_amount_status = #{otherFreezeAmountStatus,jdbcType=VARCHAR},
      illegal_freeze_amount_status = #{illegalFreezeAmountStatus,jdbcType=VARCHAR},
      additional_amount_status = #{additionalAmountStatus,jdbcType=VARCHAR},
      return_car_inspection_staff = #{returnCarInspectionStaff,jdbcType=VARCHAR},
      pick_car_inspection_staff = #{pickCarInspectionStaff,jdbcType=VARCHAR},
      is_willing_buy_car = #{isWillingBuyCar,jdbcType=VARCHAR},
      return_car_oil_mass_cell = #{returnCarOilMassCell,jdbcType=INTEGER},
      pick_car_oil_mass_cell = #{pickCarOilMassCell,jdbcType=INTEGER},
      is_face_recognition = #{isFaceRecognition,jdbcType=VARCHAR},
      return_park_place = #{returnParkPlace,jdbcType=VARCHAR},
      actual_margin = #{actualMargin,jdbcType=DECIMAL},
      actual_rent = #{actualRent,jdbcType=DECIMAL},
      zhima_score = #{zhimaScore,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>